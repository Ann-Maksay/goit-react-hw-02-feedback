{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptionsStyled.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/StatisticsStyled.js","components/Statistics/Statistics.js","data/values.js","components/App.js","index.js"],"names":["Section","title","children","FeedbackOptionsWrapper","styled","div","FeedbackOptions","onLeaveFeedback","options","map","elem","type","name","toLowerCase","onClick","className","Notification","message","StatisticsWrapper","Statistics","good","neutral","bad","total","positiveFeedback","VALUES_NAMES","App","state","handleClick","event","target","setState","prevState","this","Math","round","countTotalFeedback","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAiBeA,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,M,cCLMC,EAAyBC,IAAOC,IAAV,qPC4BpBC,EAzBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,gBAAiBC,EAAc,EAAdA,QAC1C,OACE,cAACL,EAAD,UACGK,EAAQC,KAAI,SAACC,GACZ,OACE,wBACEC,KAAK,SACLC,KAAMF,EAAKG,cACXC,QAASP,EAETQ,UAAU,iBALZ,SAOGL,GAHIA,SCHFM,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCFAC,EAAoBd,IAAOC,IAAV,2JCiCfc,EA7BI,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,iBAC/C,OACE,qCACGD,EAAQ,GACP,cAACL,EAAD,UACE,qBAAIH,UAAU,iBAAd,UACE,qBAAIA,UAAU,qBAAd,mBAA0CK,KAC1C,qBAAIL,UAAU,qBAAd,sBAA6CM,KAC7C,qBAAIN,UAAU,qBAAd,kBAAyCO,KACzC,qBAAIP,UAAU,qBAAd,oBAA2CQ,KAC3C,qBAAIR,UAAU,qBAAd,gCACsBS,EADtB,YAMK,IAAVD,GAAe,cAAC,EAAD,CAAcN,QAAQ,0BCtB/BQ,EAAe,CAAC,OAAQ,UAAW,OCqDjCC,E,4MA7CbC,MAAQ,CAAEP,KAAM,EAAGC,QAAS,EAAGC,IAAK,G,EAEpCM,YAAc,SAACC,GACb,IAAQC,EAAWD,EAAXC,OAER,EAAKC,UAAS,SAACC,GAAD,sBACXF,EAAOlB,KAAOoB,EAAUF,EAAOlB,MAAQ,O,wDAI5C,WACE,OAAOqB,KAAKN,MAAMP,KAAOa,KAAKN,MAAMN,QAAUY,KAAKN,MAAML,M,6CAG3D,WACE,OAAIW,KAAKN,MAAMP,KACNc,KAAKC,MAAyB,IAAlBF,KAAKN,MAAMP,KAAca,KAAKG,sBAE1C,I,oBAIX,WACE,OACE,qCACE,cAAC,EAAD,CAASnC,MAAM,uBAAf,SACE,cAAC,EAAD,CACEO,QAASiB,EACTlB,gBAAiB0B,KAAKL,gBAG1B,cAAC,EAAD,CAAS3B,MAAM,aAAf,SACE,cAAC,EAAD,CACEmB,KAAMa,KAAKN,MAAMP,KACjBC,QAASY,KAAKN,MAAMN,QACpBC,IAAKW,KAAKN,MAAML,IAChBC,MAAOU,KAAKG,qBACZZ,iBAAkBS,KAAKI,6C,GAtCjBC,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5f8fa267.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FeedbackOptionsWrapper = styled.div`\r\n  .feedbackButton {\r\n    margin-right: 20px;\r\n    border-radius: 5px;\r\n    border: 2px solid #bdb1b1;\r\n    outline: none;\r\n    width: 90px;\r\n    height: 40px;\r\n    font-size: 20px;\r\n    background-color: white;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { FeedbackOptionsWrapper } from \"./FeedbackOptionsStyled\";\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback, options }) => {\r\n  return (\r\n    <FeedbackOptionsWrapper>\r\n      {options.map((elem) => {\r\n        return (\r\n          <button\r\n            type=\"button\"\r\n            name={elem.toLowerCase()}\r\n            onClick={onLeaveFeedback}\r\n            key={elem}\r\n            className=\"feedbackButton\"\r\n          >\r\n            {elem}\r\n          </button>\r\n        );\r\n      })}\r\n    </FeedbackOptionsWrapper>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StatisticsWrapper = styled.div`\r\n  .statisticsList {\r\n    list-style: none;\r\n    font-size: 20px;\r\n  }\r\n  .statisticsListItem {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Notification from \"../Notification/Notification\";\r\n\r\nimport { StatisticsWrapper } from \"./StatisticsStyled\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positiveFeedback }) => {\r\n  return (\r\n    <>\r\n      {total > 0 && (\r\n        <StatisticsWrapper>\r\n          <ul className=\"statisticsList\">\r\n            <li className=\"statisticsListItem\">Good: {good}</li>\r\n            <li className=\"statisticsListItem\">Neutral: {neutral}</li>\r\n            <li className=\"statisticsListItem\">Bad: {bad}</li>\r\n            <li className=\"statisticsListItem\">Total: {total}</li>\r\n            <li className=\"statisticsListItem\">\r\n              Positive feedback: {positiveFeedback}%\r\n            </li>\r\n          </ul>\r\n        </StatisticsWrapper>\r\n      )}\r\n      {total === 0 && <Notification message=\"No feedback given\" />}\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positiveFeedback: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","export const VALUES_NAMES = [\"Good\", \"Neutral\", \"Bad\"];\r\n","import React, { Component } from \"react\";\n\nimport Section from \"./Section/Section\";\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./Statistics/Statistics\";\nimport { VALUES_NAMES } from \"../data/values\";\n\nclass App extends Component {\n  state = { good: 0, neutral: 0, bad: 0 };\n\n  handleClick = (event) => {\n    const { target } = event;\n\n    this.setState((prevState) => ({\n      [target.name]: prevState[target.name] + 1,\n    }));\n  };\n\n  countTotalFeedback() {\n    return this.state.good + this.state.neutral + this.state.bad;\n  }\n\n  countPositiveFeedbackPercentage() {\n    if (this.state.good) {\n      return Math.round((this.state.good * 100) / this.countTotalFeedback());\n    } else {\n      return 0;\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Section title=\"Plese leave feedback\">\n          <FeedbackOptions\n            options={VALUES_NAMES}\n            onLeaveFeedback={this.handleClick}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            total={this.countTotalFeedback()}\n            positiveFeedback={this.countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}